#!/usr/bin/ruby
$:.push '/home/ebrodeur/Projects/bin_snippets/lib'
require 'app'
require 'optparser'
include Bini

App.version = "0.9.0"
App.banner = "Usage: cower_glob [options] search string"


Options.bool_on "outofdate", "Include out of date results."
Options.parse!

#give it strings, returns an array of hashed of results.
def get_list(string)
	a = []
	results = %x[cower --listdelim ',' -s --format '%n,%v,%a,%c,%t,%d' #{string}]

	results.split("\n").each do |line|
		h = {}
		# so this was fun, the idea here is that we loop thru a list of words, and keep count.
		# since the words line up to the order above, the results will line up as well.
		words = line.split ","
		i = 0
		%w{name ver last cat outofdate desc}.each do |w|
			h[w.to_sym] = words[i]
			i = i + 1
		end

		# TODO: make this less ugly.
		# so outofdate/last don't need to be strings, lets fix it.
		h[:outofdate] == 'yes'  ? h[:outofdate] = true : h[:outofdate] = false
		h[:last] = h[:last].to_i
		a.push h
	end
	a
end

# take an array of hashes, start downloading stuff to the current dir.
def fetch_list(list)
	list.each do |h|
		puts "downloading #{h[:name]}"
		%x[cower --brief -dd #{h[:name]}]
	end
end

if ARGV.empty?
	puts "Please include something to search for."
else
	fetch_list get_list ARGV.join " "
end
