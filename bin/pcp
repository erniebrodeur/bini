#!/usr/bin/ruby
# progress bar/colorized cp for long ass moves on the cli.
require 'progress_bar'
require 'fileutils'
require 'sys/proctable'

def size(filename)
	return File.stat(filename).size if File.exist? filename
	return 0
end


def running?(pid)
	return true if Sys::ProcTable.ps pid
	false
end

def print_bar(bar, size)
	bar.count = size
	bar.write if bar.max > 0
end

def pcp(src, dst)
	bar = ProgressBar.new(size(src))

	puts "#{src} -> #{dst}"
	Process.waitall
	FileUtils.mkdir_p File.dirname dst
	pid = fork { FileUtils.cp src, dst}

	while running? pid
		break if size(src) == size(dst)
		print_bar bar, size(dst)
		sleep 0.1
	end
	print_bar bar, size(dst)
end

def all_files(list)
	files = []
	list.each do |f|
		next if !File.exist? f
		if File.directory? f
			files += all_files Dir.glob("#{f}/*")
		else
			files.push f
		end
	end
	files
end

if __FILE__ == $0
	if ARGV.count == 0
		puts "Please supply a file list to copy."
		exit
	end

	if ARGV.count == 1
		puts "You must supply a destination."
		exit
	end
	dst = ARGV.pop

	files = all_files ARGV

	if files.count == 1
		pcp files[0], dst
	else
		if !File.exist? dst
			targets = files.map { |x| [x, "#{dst}/#{x[x.index("/")+1..-1]}"]}
		else
			targets = files.map { |x| [x, "#{dst}/#{x}"]}
		end
	end

	targets.each do |s, d|
		pcp s, d
	end if targets

	Process.waitall
end
